<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171002 00:24:36.516" generator="Robot 3.0.2 (Python 2.7.10 on win32)">
<suite source="C:\Users\BlackStorm\Documents\CodeProjects\DevOpsOrders\orders\demo\src\main\java\com\example\demo\testsTemplate.robot" id="s1" name="testsTemplate">
<test id="s1-t1" name="Get page and test if string exists">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>authApi</arg>
<arg>${page}</arg>
</arguments>
<msg timestamp="20171002 00:24:36.707" level="INFO">Creating Session using : alias=authApi, url=http://samples.openweathermap.org, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20171002 00:24:36.708" starttime="20171002 00:24:36.707"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>authApi</arg>
<arg>/pollution/v1/co/0.0,10.0/2016-12-25T01:04:08Z.json?appid=b1b15e88fa797225412429c1c50c122a1</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20171002 00:24:36.805" level="INFO">Get Request using : alias=authApi, uri=/pollution/v1/co/0.0,10.0/2016-12-25T01:04:08Z.json?appid=b1b15e88fa797225412429c1c50c122a1, headers=None json=None</msg>
<msg timestamp="20171002 00:24:36.805" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 00:24:36.805" starttime="20171002 00:24:36.708"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20171002 00:24:36.806" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20171002 00:24:36.806" starttime="20171002 00:24:36.805"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20171002 00:24:36.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171002 00:24:36.806" starttime="20171002 00:24:36.806"></status>
</kw>
<status status="PASS" endtime="20171002 00:24:36.807" critical="yes" starttime="20171002 00:24:36.706"></status>
</test>
<test id="s1-t2" name="Dictionary contains key">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${counter}</var>
</assign>
<msg timestamp="20171002 00:24:36.808" level="INFO">${counter} = 0</msg>
<status status="PASS" endtime="20171002 00:24:36.808" starttime="20171002 00:24:36.808"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nStarting JSON\n${resp.json()}</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.809" starttime="20171002 00:24:36.808"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${jsonstring}</var>
</assign>
<msg timestamp="20171002 00:24:36.810" level="INFO">${jsonstring} = {u'data': [{u'pressure': 1000, u'precision': -4.999999987376214e-07, u'value': 9.30106835994593e-08}, {u'pressure': 681.2920532226562, u'precision': -4.999999987376214e-07, u'value': 1.067570067903034...</msg>
<status status="PASS" endtime="20171002 00:24:36.811" starttime="20171002 00:24:36.810"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${jsonstring}</arg>
<arg>u'</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20171002 00:24:36.811" level="INFO">${json_string} = {"data': [{"pressure': 1000, "precision': -4.999999987376214e-07, "value': 9.30106835994593e-08}, {"pressure': 681.2920532226562, "precision': -4.999999987376214e-07, "value': 1.0675700679030342e-07},...</msg>
<status status="PASS" endtime="20171002 00:24:36.811" starttime="20171002 00:24:36.811"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${jsonstring}</arg>
<arg>'</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20171002 00:24:36.812" level="INFO">${json_string} = {"data": [{"pressure": 1000, "precision": -4.999999987376214e-07, "value": 9.30106835994593e-08}, {"pressure": 681.2920532226562, "precision": -4.999999987376214e-07, "value": 1.0675700679030342e-07},...</msg>
<status status="PASS" endtime="20171002 00:24:36.812" starttime="20171002 00:24:36.811"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nConverted JSON:\n${json_string}</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.813" starttime="20171002 00:24:36.812"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.loads('''${json_string}''')</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20171002 00:24:36.814" level="INFO">${json} = {u'data': [{u'pressure': 1000, u'precision': -4.999999987376214e-07, u'value': 9.30106835994593e-08}, {u'pressure': 681.2920532226562, u'precision': -4.999999987376214e-07, u'value': 1.067570067903034...</msg>
<status status="PASS" endtime="20171002 00:24:36.814" starttime="20171002 00:24:36.813"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nStarting loop\n</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.817" starttime="20171002 00:24:36.816"></status>
</kw>
<kw type="for" name="${item} IN [ @${json[&quot;data&quot;]} ]">
<kw type="foritem" name="${item} = @[{u'pressure': 1000, u'precision': -4.999999987376214e-07, u'value': 9.30106835994593e-08}, {u'pressure': 681.2920532226562, u'precision': -4.999999987376214e-07, u'value': 1.0675700679030342e-07}, {...">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nLoop count: ${counter}\n</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.818" starttime="20171002 00:24:36.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json["data"][${counter}]}</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.819" starttime="20171002 00:24:36.818"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${json["data"][${counter}]}</arg>
<arg>id=the new value</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.819" starttime="20171002 00:24:36.819"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>json.dumps(${json["data"][${counter}]})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20171002 00:24:36.820" level="INFO">${json_string} = {"pressure": 1000, "precision": -4.999999987376214e-07, "value": 9.30106835994593e-08, "id": "the new value"}</msg>
<status status="PASS" endtime="20171002 00:24:36.820" starttime="20171002 00:24:36.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nDumperinoe ${json_string}\n</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.821" starttime="20171002 00:24:36.820"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${json_string}</arg>
<arg>precision</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.821" starttime="20171002 00:24:36.821"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${counter}+1</arg>
</arguments>
<assign>
<var>${counter}</var>
</assign>
<msg timestamp="20171002 00:24:36.822" level="INFO">${counter} = 1</msg>
<status status="PASS" endtime="20171002 00:24:36.822" starttime="20171002 00:24:36.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n${counter}\n</arg>
</arguments>
<status status="PASS" endtime="20171002 00:24:36.823" starttime="20171002 00:24:36.822"></status>
</kw>
<status status="PASS" endtime="20171002 00:24:36.823" starttime="20171002 00:24:36.818"></status>
</kw>
<status status="PASS" endtime="20171002 00:24:36.823" starttime="20171002 00:24:36.817"></status>
</kw>
<status status="PASS" endtime="20171002 00:24:36.823" critical="yes" starttime="20171002 00:24:36.807"></status>
</test>
<status status="PASS" endtime="20171002 00:24:36.824" starttime="20171002 00:24:36.519"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="testsTemplate" pass="2">testsTemplate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
